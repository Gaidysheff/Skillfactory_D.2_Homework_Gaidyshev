
Windows PowerShell
(C) Корпорация Майкрософт (Microsoft Corporation). Все права защищены.
Попробуйте новую кроссплатформенную оболочку PowerShell (https://aka.ms/pscore6)
PS C:\Users\admin\VisualStudion Folder\TEST_D2> venv/scripts/activate
(venv) PS C:\Users\admin\VisualStudion Folder\TEST_D2> cd .\NewsPaper\
(venv) PS C:\Users\admin\VisualStudion Folder\TEST_D2\NewsPaper> py manage.py shell
Python 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:57:54) [MSC v.1924 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from newsapp.models import *
u1 = User.objects.create_user(username='Alex')
>>> u2 = User.objects.create_user(username='Albert')
>>> u3 = User.objects.create_user(username='Andrew')
>>> u4 = User.objects.create_user(username='Calvin')
>>> u5 = User.objects.create_user(username='Edward')
>>> Author.objects.create(authorUser=u1)
<Author: Author object (1)>
>>> Author.objects.create(authorUser=u2)
<Author: Author object (2)>
>>> Author.objects.create(authorUser=u3)
<Author: Author object (3)>
>>> Author.objects.create(authorUser=u4)
<Author: Author object (4)>
>>> Author.objects.create(authorUser=u5)
<Author: Author object (5)>
>>> author = Author.objects.get(id=1)
>>> author
<Author: Author object (1)>
>>> Post.objects.create(author=author, categoryType='NW', title='something', text='some huge text must be over here')
<Post: Post object (1)>
>>> Post.objects.get(id=1)
<Post: Post object (1)>
>>> Post.objects.get(id=1).title
'something'
>>> Post.objects.create(author=author, categoryType='AR', title='About something', text='Here is also some huge amount of text. REPEAT - Here is also some huge amount of text.')
<Post: Post object (2)>
>>> author = Author.objects.get(id=3)
>>> Post.objects.create(author=author, categoryType='DG', title="Today's Overview", text='There are many sets of news taking place for today.')
<Post: Post object (3)>
>>> author = Author.objects.get(id=4)
>>> uthor = Author.objects.get(id=5)
>>> author = Author.objects.get(id=5)
>>> Post.objects.create(author=author, categoryType='AR', title="Today's Overview", text='Paragrath n\
... ... New Paragrath n\
... New Paragrath n\
... New Paragrath n\
... New Paragrath n\
... New Paragrath n\
... ')
<Post: Post object (5)>
>>> Post.objects.get(id=3)
<Post: Post object (3)>
>>> ost.objects.get(id=3).title
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'ost' is not defined
>>> Post.objects.get(id=3)
<Post: Post object (3)>
>>> Post.objects.get(id=3).title
"Today's Overview"
>>> Category.objects.create(name='Science Fiction')
<Category: Category object (1)>
>>> Category.objects.create(name='IT')             
<Category: Category object (2)>
>>> Category.objects.create(name='Horror')         
<Category: Category object (3)>
>>> Category.objects.create(name='Health')         
<Category: Category object (4)>
>>> Category.objects.create(name='Art')            
<Category: Category object (5)>
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=3))
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=3))
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=2))
>>> Post.objects.get(id=4).postCategory.add(Category.objects.get(id=4)) 
>>> Post.objects.get(id=5).postCategory.add(Category.objects.get(id=1)) 
>>> Comments.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text="This is smth the best of the best I've ever seen in my life")
<Comments: Comments object (1)>
>>> Comments.objects.create(commentPost=Post.objects.get(id=2), commentUser=Author.objects.get(id=2).authorUser, text="This is smth the worst of the worst I've ever seen in my life")
<Comments: Comments object (2)>
>>> Comments.objects.create(commentPost=Post.objects.get(id=3), commentUser=Author.objects.get(id=3).authorUser, text="This is nothing extraordinary")
<Comments: Comments object (3)>
>>> Comments.objects.create(commentPost=Post.objects.get(id=4), commentUser=Author.objects.get(id=3).authorUser, text='This is complete shit. I don not recommend to read this shit')
<Comments: Comments object (4)>
>>> Comments.objects.create(commentPost=Post.objects.get(id=5), commentUser=Author.objects.get(id=4).authorUser, text='That is quite OK')
<Comments: Comments object (5)>
>>> Comments.objects.get(id=1).like()
>>> Comments.objects.get(id=1).like()
>>> Comments.objects.get(id=1).like()
>>> Comments.objects.get(id=1).like()
>>> Comments.objects.get(id=1).like()
>>> Comments.objects.get(id=1).rating
5
>>> Comments.objects.get(id=1).dislike()
>>> Comments.objects.get(id=1).dislike()
>>> Comments.objects.get(id=1).dislike()
>>> Comments.objects.get(id=1).rating  
2
>>> Comments.objects.get(id=2).like()
>>> Comments.objects.get(id=2).like()
>>> Comments.objects.get(id=2).like()
>>> Comments.objects.get(id=2).like()
>>> Comments.objects.get(id=2).like()
>>> Comments.objects.get(id=2).like()
>>> Comments.objects.get(id=2).like()
>>> Comments.objects.get(id=1).rating
2
>>> Comments.objects.get(id=2).rating 
7
>>> Comments.objects.get(id=2).dislike()
>>> Comments.objects.get(id=2).rating
6
>>> Comments.objects.get(id=3).like()
>>> Comments.objects.get(id=3).like()
>>> Comments.objects.get(id=3).like()
>>> Comments.objects.get(id=3).like()
>>> Comments.objects.get(id=3).like()
>>> Comments.objects.get(id=4).like()
>>> Comments.objects.get(id=4).like()
>>> Comments.objects.get(id=4).like()
>>> Comments.objects.get(id=4).like()
>>> Comments.objects.get(id=4).like()
>>> Comments.objects.get(id=5).like()
>>> Comments.objects.get(id=3).rating
5
>>> Comments.objects.get(id=4).rating 
5
>>> Comments.objects.get(id=5).rating 
1
>>> Comments.objects.get(id=5).dislike()
>>> Comments.objects.get(id=5).dislike()
>>> Comments.objects.get(id=5).dislike()
>>> Comments.objects.get(id=5).dislike()
>>> Comments.objects.get(id=5).rating
-3
>>> a = Author.objects.order_by('-ratingAuthor')[:1]
>>> a
<QuerySet [<Author: Author object (1)>]>
>>> a = Author.objects.order_by('-ratingAuthor')
>>> a
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)
>, <Author: Author object (5)>]>
>>> a = Author.objects.get(id=1)
>>> a.update_rating()
>>> a.ratingAuthor
2
>>> a = Author.objects.get(id=3)     
>>> a.update_rating()
>>> a.ratingAuthor
10
>>> author = Author.objects.get(id=5)
>>> Post.objects.create(author=author, categoryType='NW', title='something', text='some huge text must be over here', rating=1)
<Post: Post object (6)>
>>> author = Author.objects.get(id=2)
>>> Post.objects.create(author=author, categoryType='AR', title='smtg', text='some huge text must be over here', rating=2)      
<Post: Post object (7)>
>>> Post.objects.create(author=author, rating=3)                                                                          
<Post: Post object (8)>
>>> a = Author.objects.get(id=2)
>>> a.update_rating()
>>> a.ratingAuthor
27
>>> author = Author.objects.get(id=4) 
>>> Post.objects.create(author=author, categoryType='DG', title='nothin', text='some text must be over here', rating=4)       
<Post: Post object (10)>
>>> a.update_rating()
>>> a.ratingAuthor
9
>>> a = Author.objects.order_by('-ratingAuthor') 
>>> a
<QuerySet [<Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>, <Author: Author object (1)>, <Author: Author object (5)>]>
>>> for i in a:
...     i.ratingAuthor
...     i.authorUser.username
... 
27
'Albert'
10
'Andrew'
9
'Calvin'
2
'Alex'
0
'Edward'
>>> p = Post.objects.order_by('-rating') 
>>> p
<QuerySet [<Post: Post object (9)>, <Post: Post object (10)>, <Post: Post object (8)>, <Post: Post object (7)>, <Post: Post object (6)>, <Post: Post object (1)>, <Po
st: Post object (2)>, <Post: Post object (3)>, <Post: Post object (4)>, <Post: Post object (5)>]>
>>> for i in p:
...     i.rating
...     i.title
... 
4
'smtg'
4
'nothin'
3
''
2
'smtg'
1
'something'
0
'something'
0
'About something'
0
"Today's Overview"
0
"Today's Overview"
0
"Today's Overview"
>>> author = Author.objects.get(id=4)
>>> Post.objects.create(author=author, categoryType='NW', title='the best', text='some huge text must be over here', rating=5) 
<Post: Post object (11)>
>>> quit()
(venv) PS C:\Users\admin\VisualStudion Folder\TEST_NP\NewsPaper> py manage.py shell
Python 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:57:54) [MSC v.1924 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from newsapp.models import *
>>> p = Post.objects.order_by('-rating')
>>> p
<QuerySet [<Post: Post object (11)>, <Post: Post object (9)>, <Post: Post object (10)>, <Post: Post object (8)>, <Post: Post object (7)>, <Post: Post object (6)>, <P
ost: Post object (1)>, <Post: Post object (2)>, <Post: Post object (3)>, <Post: Post object (4)>, <Post: Post object (5)>]>
>>> for i in p:
...     i.rating
...     i.title
... 
5
'the best'
4
'smtg'
4
'nothin'
3
''
2
'smtg'
1
'something'
0
'something'
0
'About something'
0
"Today's Overview"
0
"Today's Overview"
0
"Today's Overview"
>>> for i in p:
...     i.rating
...     i.author
...     i.dateCreation
...     i.preview()
... 
5
<Author: Author object (4)>
datetime.datetime(2022, 4, 30, 12, 2, 43, 829243, tzinfo=datetime.timezone.utc)
'some huge text must be over here ... 5'
4
<Author: Author object (2)>
datetime.datetime(2022, 4, 30, 11, 21, 59, 901885, tzinfo=datetime.timezone.utc)
'some huge text must be over here ... 4'
4
<Author: Author object (4)>
datetime.datetime(2022, 4, 30, 11, 26, 26, 337639, tzinfo=datetime.timezone.utc)
'some text must be over here ... 4'
3
<Author: Author object (2)>
datetime.datetime(2022, 4, 30, 11, 17, 53, 616071, tzinfo=datetime.timezone.utc)
' ... 3'
2
<Author: Author object (2)>
datetime.datetime(2022, 4, 30, 11, 17, 7, 449404, tzinfo=datetime.timezone.utc)
'some huge text must be over here ... 2'
1
<Author: Author object (5)>
datetime.datetime(2022, 4, 30, 11, 13, 48, 189408, tzinfo=datetime.timezone.utc)
'some huge text must be over here ... 1'
0
<Author: Author object (1)>
datetime.datetime(2022, 4, 29, 12, 22, 57, 880565, tzinfo=datetime.timezone.utc)
'some huge text must be over here ... 0'
0
<Author: Author object (1)>
datetime.datetime(2022, 4, 29, 12, 24, 25, 837230, tzinfo=datetime.timezone.utc)
'Here is also some huge amount of text. REPEAT - Here is also some huge amount of text. ... 0'
0
<Author: Author object (3)>
datetime.datetime(2022, 4, 29, 12, 25, 26, 454714, tzinfo=datetime.timezone.utc)
'There are many sets of news taking place for today. ... 0'
0
<Author: Author object (3)>
datetime.datetime(2022, 4, 29, 12, 29, 21, 902993, tzinfo=datetime.timezone.utc)
'There are many sets of news taking place for today. There are many sets of news taking place for today. There are many sets ... 0'
0
<Author: Author object (5)>
datetime.datetime(2022, 4, 29, 12, 34, 17, 901207, tzinfo=datetime.timezone.utc)
'Paragrath n... New Paragrath nNew Paragrath nNew Paragrath nNew Paragrath nNew Paragrath n ... 0'
>>>











